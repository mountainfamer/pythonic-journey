1. 克隆远端仓库到本地：
    git clone https://github.com/mountainfamer/pythonic-journey.git  #clone把远程仓库克隆到本地，但本地并没有任何分支；如果要提交内容，还需要创建一个本地分支(参考4)；
    然后,拉取一次代码,建立本地分支与远端分支的联结； 
2. 获取远端分支到本地：
  1) fetch方式：
    git init
    git remote add origin https://github.com/mountainfamer/pythonic-journey.git
    git fetch origin		  	 #获取远程分支到本地； 
  2) pull方式： 
    git init
    git remote add origin https://github.com/mountainfamer/pythonic-journey.git
    git pull origin master		 #获取远程分支到本地；
3. 从远程分支origin/master创建本地分支
    git checkout -b master origin/master #从远程分支origin/master创建本地分支master并检出; 
    git checkout -b test   origin/master #从远程分支origin/master创建本地分支master并检出; 
4. git初始化后为什么不能创建本地分支
    git init
    #因为init后，本地的master分支没真正创建好，必须要先提交一个文件，才能创建完成;
    #create a file
    git add .
    git commit -m "add a test file"	 #执行到这一步后，master分支创建文成，就可以创建分支了;
    git branch test			 #test分支创建成功;
5. 各种checkout方式的区别：
    git checkout -b master_copy    	 #从当前分支创建新分支master_copy并检出，做了两个动作：创建，检出成当前分支;
    git checkout -b master master_copy   #上面的完整版 
    git checkout features/performance	 #检出已存在的分支features/performance，只做了一个动作：检出成当前分支;
    git checkout --track hotfixes/BJ	 #检出远程分支hotfixes/BJ并创建本地跟踪分支
    git checkout v2.0                    #检出版本v2.0
    git checkout -b devel origin/develop #从远程分支develop创建新本地分支devel并检出